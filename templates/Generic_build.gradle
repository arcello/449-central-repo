//All these version numbers should be updated, but only during preseason.
plugins {
	id 'org.hidetake.ssh' version "2.9.0"
	id "java"
	id "eclipse"
	id "idea"
	id "jaci.openrio.gradle.GradleRIO" version "2017.1.5"
}

group 'org.usfirst.frc.team449.PROJECT_NAME'
version '1.0'

repositories {
	mavenCentral()
	maven {
		name = "GradleRio"
		url = "http://dev.imjac.in/maven"
	}

	maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.0.pr3'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0.pr3'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.0.pr3'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.0.pr3'
	//com.fasterxml.jackson.module:jackson-module-parameter-names:2.9.0.pr3
	compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.9.0.pr3'
	compile 'org.jetbrains:annotations:13.0'
	compile wpilib()
	compile talonSrx()
	compile navx()
}

task convertFiles {
	doLast {
		fileTree("src/main/resources").matching { include "*.txt" }.each { aFile ->
			exec {
				commandLine 'dos2unix'
				args aFile.absolutePath
			}
		}
	}
}

/* GradleRIO stuff */
remotes {
	rio {
		host = 'roboRIO-449-frc.local'
		user = 'lvuser'
		knownHosts = allowAnyHosts
	}
}

frc {
	team = '449'
	robotClass = "org.usfirst.frc.team449.robot.Robot"
}

wpi {
	wpilibVersion = "+"
	// The WPILib version to use. For this version of GradleRIO, must be a 2017 version
	ntcoreVersion = "+"                   // The NetworkTables Core version to use.
	opencvVersion = "+"                   // The OpenCV version to use
	cscoreVersion = "+"                   // The CSCore version to use

	talonSrxVersion = "+"                 // The CTRE Toolsuite (Talon SRX) version to use.
}

def robotManifest = {
	attributes 'Main-Class': 'edu.wpi.first.wpilibj.RobotBase'
	attributes 'Robot-Class': frc.robotClass
}

task('copyResources', dependsOn: convertFiles) {
	doLast {
		ssh.run {
			session(remotes.rio) {
				execute 'mkdir ~/449_resources', ignoreError: true
				execute 'mkdir ~/logs', ignoreError: true
				put from: fileTree('src/main/resources'), into: './449_resources/'
			}
		}
	}
}

/* Generic artifact gen stuff */
jar {
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	manifest robotManifest
}

task genJavadoc(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives genJavadoc
}

compileJava {
	options.compilerArgs << '-parameters'
}